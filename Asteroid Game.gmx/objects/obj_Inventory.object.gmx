<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Inventory</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_InventoryMaskClosed</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
InventoryShown = 0
Transparency = 1

Rows = 4
Columns = 6

ini_open("World_" + string(WorldID) + ".ini")
if ini_section_exists("Inventory")
{
    Inventory = WorldGeneration.Inventory
}
else
{
    Inventory = ds_grid_create(Columns, Rows)
}
ini_close()
//InventoryNumbers = ds_grid_create(Columns, Rows)

ds_grid_add_region(Inventory, 0, 0, Columns-1, Rows-1, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show/Hide Inventory
if InventoryShown = 0.5
{
    mask_index = spr_InventoryMaskOpen
    InventoryShown = 1
    for (yy = 0; yy &lt; Rows; yy += 1)
    {
        for (xx = 0; xx &lt; Columns; xx += 1)
        {
            with instance_create(view_xview + 496 + 8 + (xx * 24), view_yview + 4 + 8 + (yy * 23), obj_InventorySlot)
            {
                xx = other.xx
                yy = other.yy
                sx = 8 + (other.xx * 24)
                sy = 8 + (other.yy * 23)
            }
        }
    }
}
else if InventoryShown = 1.5
{
    InventoryShown = 0
    mask_index = spr_InventoryMaskClosed
    with obj_InventorySlot
    {
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Transparency
x = view_xview
y = view_yview

if place_meeting(x, y, obj_Player)
{
    Transparency = 0.5
}
else
{
    Transparency = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open/Close Inventory
if obj_GUI.CommandInput = false and ShowingTextBox = false
{
    mask_index = noone
    if InventoryShown = 0
    {
        alarm[0] = room_speed / 20
        InventoryShown = 0.5
    }
    else if InventoryShown = 1
    {
        InventoryShown = 1.5
        alarm[0] = room_speed / 40
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Inventory
if InventoryShown = 0
{
    draw_sprite_ext(spr_Inventory,0,view_xview,view_yview,1,1,0,c_white,Transparency)
}
else if InventoryShown = 0.5
{
    draw_sprite_ext(spr_Inventory,-1,view_xview,view_yview,1,1,0,c_white,Transparency)
}
else if InventoryShown = 1
{
    draw_sprite_ext(spr_Inventory,5,view_xview,view_yview,1,1,0,c_white,Transparency)
    for (yy = 0; yy &lt; Rows; yy += 1)
    {
        for (xx = 0; xx &lt; Columns; xx += 1)
        {
            if not ds_grid_get(Inventory, xx, yy) = 0
            {
                draw_set_font(obj_FontCreator.SmallestGameFont)
                ItemProperties = ds_grid_get(Inventory, xx, yy)
                Sprite = ds_list_find_value(ItemProperties, 2)
                Subimage = ds_list_find_value(ItemProperties, 3)
                Number = ds_list_find_value(ItemProperties, 4)
                draw_sprite(Sprite, Subimage, view_xview + 496 + 8 + (xx * 24), view_yview + 4 + 8 + (yy * 23))
                draw_text_colour(view_xview+496+(xx*24), view_yview+4+8+(yy*23), Number, c_white, c_white, c_white, c_white, 1)
                draw_set_font(obj_FontCreator.GameFont)
            }
        }
    }
}
else if InventoryShown = 1.5
{
    draw_sprite_ext(spr_Inventory,5,view_xview,view_yview,1,1,0,c_white,Transparency)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
